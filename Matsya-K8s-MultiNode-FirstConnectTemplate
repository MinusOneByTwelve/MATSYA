#!/bin/bash

clear

RANDOMUSERNAME="THENAMEOFTHEUSER"
RANDOMPASSWORD="THEPASSWORDFORTHEUSER"
THEOSNAME="OSNAMETOBEUSED"
THEBASENAME="BASENAMETOBEUSED"
THECLUSTERNAME="CLUSTERNAMETOBEUSED"

if [ $THEOSNAME == "DEB" ] || [ $THEOSNAME == "UBU" ] || [ $THEOSNAME == "UBU0" ] || [ $THEOSNAME == "MNT" ] || [ $THEOSNAME == "POS" ] ; then
	sudo mkdir -p $THEBASENAME/K8sMN/$THECLUSTERNAME/Keys
	sudo mkdir -p $THEBASENAME/Repo
	sudo useradd -d $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME -s /bin/bash -m $RANDOMUSERNAME
	sudo usermod -p $(echo "$RANDOMPASSWORD" | openssl passwd -1 -stdin) $RANDOMUSERNAME
	sudo usermod -aG sudo $RANDOMUSERNAME
	sudo rm -f /etc/sudoers.d/$RANDOMUSERNAME-user
	echo "$RANDOMUSERNAME ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$RANDOMUSERNAME-user > /dev/null
	sudo mkdir -p $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME/.ssh
	sudo chown -R $RANDOMUSERNAME:$RANDOMUSERNAME $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME/.ssh
	sudo chmod -R u=rwx,g=,o= $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME/.ssh
	sudo chown -R $RANDOMUSERNAME:$RANDOMUSERNAME $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME
	sudo chmod -R u=rwx,g=,o= $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME
fi

if [ $THEOSNAME == "CT7" ] || [ $THEOSNAME == "CT8" ] || [ $THEOSNAME == "E2E7" ] || [ $THEOSNAME == "AWS" ] || [ $THEOSNAME == "E2E8" ] || [ $THEOSNAME == "FDR" ] ; then
	sudo mkdir -p $THEBASENAME/K8sMN/$THECLUSTERNAME/Keys
	sudo mkdir -p $THEBASENAME/Repo
	sudo useradd -d $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME -s /bin/bash -m $RANDOMUSERNAME
	sudo usermod -p $(echo "$RANDOMPASSWORD" | openssl passwd -1 -stdin) $RANDOMUSERNAME
	sudo usermod -aG wheel $RANDOMUSERNAME
	sudo rm -f /etc/sudoers.d/$RANDOMUSERNAME-user
	echo "$RANDOMUSERNAME ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$RANDOMUSERNAME-user > /dev/null
	sudo mkdir -p $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME/.ssh
	sudo chown -R $RANDOMUSERNAME:$RANDOMUSERNAME $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME/.ssh
	sudo chmod -R u=rwx,g=,o= $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME/.ssh
	sudo chown -R $RANDOMUSERNAME:$RANDOMUSERNAME $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME
	sudo chmod -R u=rwx,g=,o= $THEBASENAME/K8sMN/$THECLUSTERNAME/$RANDOMUSERNAME
fi

if [ $THEOSNAME == "CT7" ] || [ $THEOSNAME == "E2E7" ] ; then
	sudo setenforce 0
	sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
	sudo yum -y install epel-release
	sudo yum install -y jq openssh-server openssh-clients sshpass curl wget haproxy ca-certificates curl gnupg gnupg2 corosync pcs pacemaker haproxy haveged
	sudo yum install -y yum-utils
	sudo rm -rf /etc/yum.repos.d/hashicorp.repo
	release="RHEL" && sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/$release/hashicorp.repo
	sudo yum install -y terraform
	sudo rm -rf /etc/yum.repos.d/docker-ce.repo
	sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
	sudo yum install -y docker-ce docker-ce-cli containerd.io && sudo systemctl enable docker && sudo systemctl start docker && sudo docker run hello-world
	sudo rm -rf /etc/yum.repos.d/kubernetes.repo
	echo "[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl" | sudo tee /etc/yum.repos.d/kubernetes.repo > /dev/null
	sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
	sudo systemctl enable --now kubelet
	sudo sed -i "s/GSSAPIAuthentication/#GSSAPIAuthentication/g" /etc/ssh/sshd_config
	sudo sed -i "s/GSSAPICleanupCredentials/#GSSAPICleanupCredentials/g" /etc/ssh/sshd_config
	sudo sed -i "s/AuthorizedKeysFile/#AuthorizedKeysFile/g" /etc/ssh/sshd_config
	echo "AuthorizedKeysFile %h/.ssh/authorized_keys" | sudo tee -a /etc/ssh/sshd_config > /dev/null
	sudo systemctl restart sshd
	sudo systemctl status sshd
fi

if [ $THEOSNAME == "AWS" ] || [ $THEOSNAME == "E2E8" ] || [ $THEOSNAME == "CT8" ] ; then
	sudo setenforce 0
	sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
	sudo yum -y install epel-release
	sudo sed -i "s/enabled=0/enabled=1/g" /etc/yum.repos.d/CentOS-HA.repo
	sudo yum install -y jq openssh-server openssh-clients sshpass curl wget haproxy ca-certificates curl gnupg gnupg2 corosync pcs pacemaker haproxy haveged
	sudo yum install -y yum-utils
	sudo rm -rf /etc/yum.repos.d/hashicorp.repo
	release="RHEL" && sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/$release/hashicorp.repo
	sudo yum install -y terraform
	sudo rm -rf /etc/yum.repos.d/docker-ce.repo
	sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
	sudo yum remove buildah* -y && sudo yum remove podman* -y && VERSION=$(curl -s https://api.github.com/repos/containerd/containerd/releases/latest | grep tag_name | cut -d '"' -f 4 | sed -e "s#v##") && URL='https://download.docker.com/linux/centos/8/x86_64/stable/Packages/'$(wget -q -O- https://download.docker.com/linux/centos/8/x86_64/stable/Packages/ | grep href | grep .el8.x86_64.rpm | grep containerd.io- | grep $VERSION | sed -e "s#<a href=\"##" | sort -r | head -n1 | awk '{split($0,a,">"); print a[1]}' | sed -e "s#\"##") && sudo yum install -y $URL
	sudo yum install -y docker-ce docker-ce-cli && sudo systemctl enable docker && sudo systemctl start docker && sudo docker run hello-world
	sudo rm -rf /etc/yum.repos.d/kubernetes.repo
	echo "[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl" | sudo tee /etc/yum.repos.d/kubernetes.repo > /dev/null
	sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
	sudo systemctl enable --now kubelet
	sudo sed -i "s/GSSAPIAuthentication/#GSSAPIAuthentication/g" /etc/ssh/sshd_config
	sudo sed -i "s/GSSAPICleanupCredentials/#GSSAPICleanupCredentials/g" /etc/ssh/sshd_config
	sudo sed -i "s/AuthorizedKeysFile/#AuthorizedKeysFile/g" /etc/ssh/sshd_config
	echo "AuthorizedKeysFile %h/.ssh/authorized_keys" | sudo tee -a /etc/ssh/sshd_config > /dev/null
	sudo systemctl restart sshd
	sudo systemctl status sshd
fi

if [ $THEOSNAME == "FDR" ] || [ $THEOSNAME == "FDR" ] ; then
	sudo setenforce 0
	sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
	sudo yum install -y jq openssh-server openssh-clients sshpass curl wget haproxy ca-certificates curl gnupg gnupg2 corosync pcs pacemaker haproxy haveged yum-utils
	sudo rm -rf /etc/yum.repos.d/hashicorp.repo
	release="fedora" && sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/$release/hashicorp.repo
	sudo yum install -y terraform
	sudo dnf -y install dnf-plugins-core
	sudo rm -rf /etc/yum.repos.d/docker-ce.repo
	sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
	sudo dnf install -y docker-ce docker-ce-cli containerd.io && sudo systemctl enable docker && sudo systemctl start docker && sudo docker run hello-world
	sudo rm -rf /etc/yum.repos.d/kubernetes.repo
	echo "[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl" | sudo tee /etc/yum.repos.d/kubernetes.repo > /dev/null
	sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
	sudo systemctl enable --now kubelet
	sudo sed -i "s/GSSAPIAuthentication/#GSSAPIAuthentication/g" /etc/ssh/sshd_config
	sudo sed -i "s/GSSAPICleanupCredentials/#GSSAPICleanupCredentials/g" /etc/ssh/sshd_config
	sudo sed -i "s/AuthorizedKeysFile/#AuthorizedKeysFile/g" /etc/ssh/sshd_config
	echo "AuthorizedKeysFile %h/.ssh/authorized_keys" | sudo tee -a /etc/ssh/sshd_config > /dev/null
	sudo systemctl restart sshd
	sudo systemctl status sshd
fi

if [ $THEOSNAME == "DEB" ] || [ $THEOSNAME == "UBU" ] || [ $THEOSNAME == "UBU0" ] || [ $THEOSNAME == "MNT" ] || [ $THEOSNAME == "POS" ] ; then
	sudo apt-get install -y jq ssh sshpass curl wget heartbeat haproxy apt-transport-https ca-certificates curl gnupg gnupg2 software-properties-common lsb-release gnupg-agent corosync pcs pacemaker haproxy haveged
fi

if [ $THEOSNAME == "UBU" ] || [ $THEOSNAME == "UBU0" ] || [ $THEOSNAME == "MNT" ] ; then
	sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
	sudo rm -rf /etc/apt/sources.list.d/kubernetes.list
	echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null
	curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
	sudo rm -rf /etc/apt/sources.list.d/archive_uri-https_apt_releases_hashicorp_com-groovy.list
	echo "deb [arch=amd64] https://apt.releases.hashicorp.com groovy main" | sudo tee /etc/apt/sources.list.d/archive_uri-https_apt_releases_hashicorp_com-groovy.list > /dev/null
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg	
	sudo rm -rf /etc/apt/sources.list.d/docker.list
	if [ $THEOSNAME == "MNT" ] || [ $THEOSNAME == "UBU0" ] ; then
		echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	fi
	if [ $THEOSNAME == "UBU" ] || [ $THEOSNAME == "UBU" ] ; then
		echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu groovy stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	fi		
	sudo apt-get update -y && sudo apt-get install -y terraform docker-ce docker-ce-cli containerd.io && sudo docker run hello-world && sudo apt-get install -y kubelet kubeadm kubectl
fi

if [ $THEOSNAME == "DEB" ] || [ $THEOSNAME == "DEB" ] ; then
	sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
	sudo rm -rf /etc/apt/sources.list.d/kubernetes.list
	echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null
	curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
	sudo rm -rf /etc/apt/sources.list.d/archive_uri-https_apt_releases_hashicorp_com-buster.list
	echo "deb [arch=amd64] https://apt.releases.hashicorp.com buster main" | sudo tee /etc/apt/sources.list.d/archive_uri-https_apt_releases_hashicorp_com-buster.list > /dev/null	 
	curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
	sudo rm -rf /etc/apt/sources.list.d/docker.list
	echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	sudo apt-get update -y && sudo apt-get install -y terraform docker-ce docker-ce-cli containerd.io && sudo docker run hello-world && sudo apt-get install -y kubelet kubeadm kubectl	
fi

if [ $THEOSNAME == "POS" ] || [ $THEOSNAME == "POS" ] ; then	
	sudo apt-get install -y terraform docker-ce docker-ce-cli containerd.io && sudo docker run hello-world && sudo apt-get install -y kubelet kubeadm kubectl					
fi

if [ $THEOSNAME == "POS" ] || [ $THEOSNAME == "POS" ] ; then	
	ABC="XYZ"
else
	sudo swapoff -a					
fi

