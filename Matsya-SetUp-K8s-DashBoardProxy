#!/bin/bash

sudo yum -y install nginx
sudo systemctl start nginx
sudo systemctl status nginx
sudo systemctl enable nginx
sudo rm -f /etc/nginx/fastcgi.conf.default
sudo rm -f /etc/nginx/fastcgi_params.default
sudo rm -f /etc/nginx/mime.types.default
sudo rm -f /etc/nginx/nginx.conf.default
sudo rm -f /etc/nginx/scgi_params.default
sudo rm -f /etc/nginx/uwsgi_params.default
sudo mkdir -p /etc/nginx/sites-enabled
sudo mkdir -p /etc/nginx/sites-available
sudo rm -f /etc/nginx/nginx.conf
sudo rm -f /etc/nginx/conf.d/default.conf
sudo rm -f /etc/nginx/sites-enabled/default
sudo rm -f /etc/nginx/sites-available/default
sudo mkdir -p /opt/Matsya
pushd /opt/Matsya
wget https://Minus1by12.com/Matsya/nginx.zip && chmod 777 nginx.zip
unzip nginx.zip
rm -f nginx.zip
popd
sudo mkdir -p /opt/Matsya/nginx
sudo chown nginx:nginx /opt/Matsya/nginx
sudo chmod -R 777 /opt/Matsya/nginx
sudo mkdir -p /opt/Matsya/extender
sudo chmod -R 777 /opt/Matsya/extender
pushd /opt/Matsya/extender
wget https://Minus1by12.com/Matsya/nginx.conf && chmod 777 nginx.conf && sed -i -e 's/\r$//' nginx.conf
wget https://Minus1by12.com/Matsya/default.conf && chmod 777 default.conf && sed -i -e 's/\r$//' default.conf
wget https://Minus1by12.com/Matsya/default && chmod 777 default && sed -i -e 's/\r$//' default
popd
sudo chmod -R 777 /opt/Matsya/extender
sudo cp /opt/Matsya/extender/nginx.conf /etc/nginx/nginx.conf
sudo cp /opt/Matsya/extender/default.conf /etc/nginx/conf.d/default.conf
sudo cp /opt/Matsya/extender/default /etc/nginx/sites-available/default
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
sudo systemctl restart nginx
sudo yum install -y certbot python2-certbot-nginx
sudo mkdir -p /etc/ssl/certs
sudo mkdir -p /etc/ssl/private
sudo chmod 700 /etc/ssl/private
sudo rm -f /etc/ssl/private/openssl.key
sudo rm -f /etc/ssl/certs/openssl.crt
sudo rm -f /etc/ssl/certs/openssl_dhparam.pem
country=IN
state=Karnataka
locality=HSR
organization=Minus1By12.com
organizationalunit=DevOps
commonname=k8sfacilitator
email=Contact@Minus1By12.com
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/openssl.key -out /etc/ssl/certs/openssl.crt -subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email"
sudo openssl dhparam -out /etc/ssl/certs/openssl_dhparam.pem 2048
sudo rm -f /etc/ssl/certs/openssl_ca_key.pem
sudo rm -f /etc/ssl/certs/openssl_ca.pem
sudo rm -f /etc/ssl/certs/openssl_server_key.pem
sudo rm -f /etc/ssl/certs/openssl_server_req.pem
sudo rm -f /etc/ssl/certs/openssl_server_cert.pem
sudo rm -f /etc/ssl/certs/openssl_client_key.pem
sudo rm -f /etc/ssl/certs/openssl_client_req.pem
sudo rm -f /etc/ssl/certs/openssl_client_cert.pem
rm -f openssl_ca_key.pem
rm -f openssl_ca.pem
rm -f openssl_server_key.pem
rm -f openssl_server_req.pem
rm -f openssl_server_cert.pem
sudo rm -f openssl_client_key.pem
sudo rm -f openssl_client_req.pem
sudo rm -f openssl_client_cert.pem
openssl genrsa 2048 > openssl_ca_key.pem
openssl req -new -x509 -nodes -days 365 -key openssl_ca_key.pem -out openssl_ca.pem -subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email"
country=IN
state=ServerPlace
locality=ServerLocation
organization=ServerOrg
organizationalunit=ServerOrgDevOps
commonname=ServerOrgK8S
email=ServerOrg@ServerOrg.com
openssl req -newkey rsa:2048 -days 365 -nodes -keyout openssl_server_key.pem -out openssl_server_req.pem -subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email"
openssl rsa -in openssl_server_key.pem -out openssl_server_key.pem
openssl x509 -req -in openssl_server_req.pem -days 365 -CA openssl_ca.pem -CAkey openssl_ca_key.pem -set_serial 01 -out openssl_server_cert.pem
openssl req -newkey rsa:2048 -days 365 -nodes -keyout openssl_client_key.pem -out openssl_client_req.pem -subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email"
openssl rsa -in openssl_client_key.pem -out openssl_client_key.pem
openssl x509 -req -in openssl_client_req.pem -days 365 -CA openssl_ca.pem -CAkey openssl_ca_key.pem -set_serial 01 -out openssl_client_cert.pem
openssl verify -CAfile openssl_ca.pem openssl_server_cert.pem openssl_client_cert.pem
sudo mv openssl_* /etc/ssl/certs
sudo rm -f /usr/bin/k8sdb
sudo rm -f /opt/Matsya/k8sdb
echo "
pkill -9 -f 'kubectl proxy'

kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml

sudo rm -f /etc/nginx/sites-available/k8sdb
sudo rm -f /etc/nginx/sites-enabled/k8sdb
sudo mkdir -p /opt/Matsya/extender/k8sdb_
rm -rf k8sdb
echo '
server {
    listen 8001 http2 ssl;
    listen [::]:8001 http2 ssl;

    server_name k8sdbHTTPS-8001;

    ssl_certificate /etc/ssl/certs/openssl.crt;
    ssl_certificate_key /etc/ssl/private/openssl.key;
    ssl_dhparam /etc/ssl/certs/openssl_dhparam.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    #add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\";
    add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains\";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    root /opt/Matsya/extender/k8sdb_;

	index index.html index.htm;

	location / {
		proxy_pass http://localhost:9000/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/;
	}	
}
' | tee k8sdb
sudo mv k8sdb /etc/nginx/sites-available
sudo ln -s /etc/nginx/sites-available/k8sdb /etc/nginx/sites-enabled/k8sdb
sudo nginx -s reload
		
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml

kubectl delete clusterrolebinding kubernetes-dashboard
#kubectl delete ns -n kubernetes-dashboard --all

cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
EOF

cat <<EOF | kubectl apply -f -
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard
EOF

kubectl proxy --port 9000 &

clear
clear
echo '-------------------------------------------------------------'
kubectl cluster-info
echo '-------------------------------------------------------------'
echo '     '
echo '-------------------------------------------------------------'
kubectl get all  --all-namespaces
echo '-------------------------------------------------------------'
echo '     '
echo '-------------------------------------------------------------'
echo 'curl http://localhost:9000/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/'
echo '-------------------------------------------------------------'
echo '     '
echo '-------------------------------------------------------------'
kubectl -n kubernetes-dashboard describe secret DOLLARSIGN(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print SIGNDOLLAR}')
echo '-------------------------------------------------------------'
" | tee k8sdb
sed -i 's#DOLLARSIGN#$#' k8sdb
sed -i 's#SIGNDOLLAR#$1#' k8sdb
sudo mv k8sdb /opt/Matsya
sudo chmod -R 777 /opt/Matsya
sudo ln -s /opt/Matsya/k8sdb /usr/bin/k8sdb

