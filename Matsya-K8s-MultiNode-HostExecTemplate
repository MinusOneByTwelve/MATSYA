#!/bin/bash

clear

RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
LBLUE='\033[1;34m'
DGRAY='\033[1;35m'
PURPLE='\033[0;35m'
RGRAY='\033[1;30m'
BOLD=$(tput bold)
NORM=$(tput sgr0)
ORANGE='\033[1;33m'

BASE="BASENAMETOBEUSED"
CLUSTERNAME="CLUSTERNAMETOBEUSED"
THEOSNAME="OSNAMETOBEUSED"
THEREQUIREDUSER="THENAMEOFTHEUSER"
THEHOMEREQUIREDFORUSER="$BASE/K8sMN/$CLUSTERNAME/$THEREQUIREDUSER"
ELIGIBLEUSERS="USERSELIGIBLE"
CURRENTUSER=$(whoami)

IFS='├' read -r -a ALLOWEDUSERS <<< $ELIGIBLEUSERS
EITHERTHIS="${ALLOWEDUSERS[0]}"
EITHERTHAT="${ALLOWEDUSERS[1]}"

if [ $CURRENTUSER == "$EITHERTHIS" ] || [ $CURRENTUSER == "$EITHERTHAT" ] ; then
	sudo chown $CURRENTUSER:$CURRENTUSER $BASE/K8sMN/$CLUSTERNAME/HOSTS
	sudo chown $CURRENTUSER:$CURRENTUSER $BASE/matsya-k8s-mn-$CLUSTERNAME-terminal.pem
else
	exit
fi

COUNTER=1
ACTUALNORMAL=()
CHOICENAME=""
SLNO=0
INCREMENT=1

echo -e "${ORANGE}==============================================================================${NC}"
echo -e "${BLUE}${BOLD}\x1b[4mM${NORM}${NC}ultifaceted deploy${BLUE}${BOLD}\x1b[4mA${NORM}${NC}gnostic ${BLUE}${BOLD}\x1b[4mT${NORM}${NC}imesaving ${BLUE}${BOLD}\x1b[4mS${NORM}${NC}calable anal${BLUE}${BOLD}\x1b[4mY${NORM}${NC}tics ${BLUE}${BOLD}\x1b[4mA${NORM}${NC}malgamated ${BOLD}\x1b[30;44mPLATFORM\x1b[m${NORM}"
echo -e "${GREEN}==============================================================================${NC}"
echo ''
echo -e "\x1b[3m\x1b[4mK8s MULTINODE (EXECUTE)\x1b[m"
echo ''
echo -e "${PURPLE}-------------------------${NC}"
echo -e "${GREEN}${BOLD}TERMINALS AVAILABLE [$CLUSTERNAME]${NORM}${NC}"
echo -e "${PURPLE}-------------------------${NC}"

COUNTERe=1
while read Terminal; do
	IFS='├' read -r -a TerminalVals <<< $Terminal
	THEREQUIREDIP="${TerminalVals[1]}"
	THEREQUIREDHOSTNAME="${TerminalVals[0]}"
	THEREQUIREDLAN="${TerminalVals[2]}"
	if [ $THEOSNAME == "AWS" ] || [ $THEOSNAME == "GCP" ] || [ $THEOSNAME == "AZR" ] || [ $THEOSNAME == "CLD" ] || [ $THEOSNAME == "E2E7" ] || [ $THEOSNAME == "E2E8" ] ; then
		if [ $THEREQUIREDLAN == "PUBLIC" ] || [ $THEOSNAME == "PUBLIC" ] ; then			
			echo "($COUNTERe) $THEREQUIREDHOSTNAME / $THEREQUIREDIP"
			COUNTERe=$((COUNTERe + 1))
			ACTUALNORMAL=("${ACTUALNORMAL[@]}" "$COUNTER~$Terminal")
			COUNTER=$((COUNTER + 1))
		fi
	else
		echo "($COUNTERe) $THEREQUIREDHOSTNAME / $THEREQUIREDIP"
		COUNTERe=$((COUNTERe + 1))
		ACTUALNORMAL=("${ACTUALNORMAL[@]}" "$COUNTER~$Terminal")
		COUNTER=$((COUNTER + 1))	
	fi
done < $BASE/K8sMN/$CLUSTERNAME/HOSTS
if [ "$COUNTERe" -lt "2" ]; then
	echo -e "${RED}${BOLD}xxxxx${NORM}${NC}"
	echo -e "${PURPLE}-------------------------${NC}"
	echo ''
	exit
fi

echo -e "${PURPLE}-------------------------${NC}"
echo ''
read -p "Enter Script Path > " -e -i "" THEREQUIREDFILE
THEREQUIREDACTUALNAMEFORFILE=$(basename $THEREQUIREDFILE)
echo ''
if [ -f "$THEREQUIREDFILE" ]
then
	ABC="XYZ"
else
	exit
fi
read -p "Enter Terminal Number(s) To Push (0 For All) > " -e -i "-1" NodeNumber
echo ''
IFS=',' read -r -a CHOICELIST <<< $NodeNumber
for _CHOICE in "${CHOICELIST[@]}"
do
	if ! [[ "$_CHOICE" =~ ^[0-9]+$ ]] ; 
	 then exec >&2; echo ""; echo -e "${RED}Number Required!!${NC}"; echo ""; exit;
	fi
	if [ "$_CHOICE" -lt "0" ] ; then
		echo ""; echo -e "${RED}Valid Number Required!!${NC}"; echo ""; exit;
	fi		
done
for _CHOICE in "${CHOICELIST[@]}"
do
	for _ACTUALNORMAL in "${ACTUALNORMAL[@]}"
	do
		IFS='~' read -r -a _ACTUALNORMALSPLIT <<< $_ACTUALNORMAL
		if [ "$_CHOICE" == "${_ACTUALNORMALSPLIT[0]}" ] || [ "$_CHOICE" == "${_ACTUALNORMALSPLIT[0]}" ] ; then	
			SLNO="$(($SLNO+$INCREMENT))"
			CHOICENAME="$CHOICENAME,${_ACTUALNORMALSPLIT[1]}"
		fi	
	done				
done
if [ "$SLNO" -lt "0" ]; then
    echo ""; echo -e "${RED}Valid Number Required!!${NC}"; echo ""; exit;
fi
THEFIRSTCHOICE="${CHOICELIST[0]}"
if [ $THEFIRSTCHOICE == "0" ] || [ $THEFIRSTCHOICE == "0" ] ; then
	for _ACTUALNORMAL in "${ACTUALNORMAL[@]}"
	do
		IFS='~' read -r -a _ACTUALNORMALSPLIT <<< $_ACTUALNORMAL
		THEHOSTTOCONNECT="${_ACTUALNORMALSPLIT[1]}"
		IFS='├' read -r -a TerminalVals <<< $THEHOSTTOCONNECT
		CONNECTTERMINAL="${TerminalVals[1]}"
		CONNECTTERMINALHOSTNAME="${TerminalVals[0]}"
		THEREQUIREDPORT="${TerminalVals[3]}"
		echo "---------------------"
		echo "$CONNECTTERMINALHOSTNAME / $CONNECTTERMINAL"
		echo "---------------------"
		echo 'Execution Started...'
		echo '~~~~~~~~~~~~~~~~~~~~~'
		scp -P $THEREQUIREDPORT -o "StrictHostKeyChecking=no" -i "$BASE/matsya-k8s-mn-$CLUSTERNAME-terminal.pem" "$THEREQUIREDFILE" $THEREQUIREDUSER@$CONNECTTERMINAL:$THEHOMEREQUIREDFORUSER > /dev/null
		ssh -p $THEREQUIREDPORT -o "StrictHostKeyChecking=no" -i "$BASE/matsya-k8s-mn-$CLUSTERNAME-terminal.pem" $THEREQUIREDUSER@$CONNECTTERMINAL "chmod u=rwx,g=,o= $THEREQUIREDACTUALNAMEFORFILE && ./$THEREQUIREDACTUALNAMEFORFILE && rm -rf $THEREQUIREDACTUALNAMEFORFILE"
		echo '~~~~~~~~~~~~~~~~~~~~~'
		echo 'Execution Complete...'
		echo "---------------------"		
		echo ''	
	done
else
	for _CHOICE in "${CHOICELIST[@]}"
	do
		for _ACTUALNORMAL in "${ACTUALNORMAL[@]}"
		do
			IFS='~' read -r -a _ACTUALNORMALSPLIT <<< $_ACTUALNORMAL
			if [ "$_CHOICE" == "${_ACTUALNORMALSPLIT[0]}" ] || [ "$_CHOICE" == "${_ACTUALNORMALSPLIT[0]}" ] ; then	
				THEHOSTTOCONNECT="${_ACTUALNORMALSPLIT[1]}"
				IFS='├' read -r -a TerminalVals <<< $THEHOSTTOCONNECT
				CONNECTTERMINAL="${TerminalVals[1]}"
				CONNECTTERMINALHOSTNAME="${TerminalVals[0]}"
				THEREQUIREDPORT="${TerminalVals[3]}"
				echo "---------------------"
				echo "$CONNECTTERMINALHOSTNAME / $CONNECTTERMINAL"
				echo "---------------------"
				echo 'Execution Started...'
				echo '~~~~~~~~~~~~~~~~~~~~~'
				scp -P $THEREQUIREDPORT -o "StrictHostKeyChecking=no" -i "$BASE/matsya-k8s-mn-$CLUSTERNAME-terminal.pem" "$THEREQUIREDFILE" $THEREQUIREDUSER@$CONNECTTERMINAL:$THEHOMEREQUIREDFORUSER > /dev/null
				ssh -p $THEREQUIREDPORT -o "StrictHostKeyChecking=no" -i "$BASE/matsya-k8s-mn-$CLUSTERNAME-terminal.pem" $THEREQUIREDUSER@$CONNECTTERMINAL "chmod u=rwx,g=,o= $THEREQUIREDACTUALNAMEFORFILE && ./$THEREQUIREDACTUALNAMEFORFILE && rm -rf $THEREQUIREDACTUALNAMEFORFILE"
				echo '~~~~~~~~~~~~~~~~~~~~~'
				echo 'Execution Complete...'
				echo "---------------------"		
				echo ''												
			fi	
		done				
	done
fi

